name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Setup Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'dashboard/package-lock.json'

      - name: Install dependencies
        run: |
          cd dashboard
          npm install --legacy-peer-deps

      - name: Create pre-build fixes
        run: |
          cd dashboard
          node -e "
          const fs = require('fs');
          fs.writeFileSync('pre-build-fix.js', \`
          // This is a pre-build step to create empty files
          const fs = require('fs');
          const path = require('path');
          
          console.log('Creating route group directories for static export...');
          
          // Create empty placeholder files for the route groups
          const routeGroupPath = path.join(__dirname, 'src/app/(dashboard)');
          fs.mkdirSync(path.join(routeGroupPath, '_static'), { recursive: true });
          fs.writeFileSync(path.join(routeGroupPath, '_static/placeholder.js'), 'export default {};');
          
          // Additional exports compatibility fixes
          const appDir = path.join(__dirname, 'src/app');
          fs.mkdirSync(path.join(appDir, '_static'), { recursive: true });
          fs.writeFileSync(path.join(appDir, '_static/placeholder.js'), 'export default {};');
          
          console.log('Pre-build fixes applied successfully!');
          \`);
          "
          node pre-build-fix.js

      - name: Build dashboard
        run: |
          cd dashboard
          npm run build
        env:
          GITHUB_ACTIONS: true
          NODE_ENV: production

      - name: Prepare files for GitHub Pages
        run: |
          # Create temporary directory for organizing files
          mkdir -p gh-pages-structure
          
          # Move the main index.html to the root
          cp index.html gh-pages-structure/index.html
          
          # Create .nojekyll file to bypass Jekyll processing
          touch gh-pages-structure/.nojekyll
          
          # Set up the bsapp directory structure
          mkdir -p gh-pages-structure/bsapp
          cp -r dashboard/out/* gh-pages-structure/bsapp/
          
          # Create a special dashboard redirect path in case it's needed
          mkdir -p gh-pages-structure/bsapp/dashboard
          echo '<!DOCTYPE html>
          <html>
            <head>
              <meta charset="utf-8">
              <meta http-equiv="refresh" content="0;url=../index.html">
              <title>Redirecting to BlueSpring Dashboard</title>
            </head>
            <body>
              <p>Redirecting to <a href="../index.html">BlueSpring Dashboard</a>...</p>
            </body>
          </html>' > gh-pages-structure/bsapp/dashboard/index.html
          
          # List the final directory structure for debugging
          echo "Final GitHub Pages directory structure:"
          find gh-pages-structure -type f | sort

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: gh-pages-structure
          clean: true 